version: 0.2

phases:
  pre_build:
    commands:   
      - $(aws ecr get-login --no-include-email)
  build:
    commands:
      - IMAGE_REPO_NAME=demo-app
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION -f Dockerfile .
  post_build:
    commands:
      # push
      
      - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/demo-app:$CODEBUILD_RESOLVED_SOURCE_VERSION $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/demo-app:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/demo-app:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/demo-app:latest
      # create new task definition
      - chmod +x ./create-new-task-def.sh
      -  ./create-new-task-def.sh demo-app
      - cat taskdef.json
      - IMAGE_REPO_NAME=demo-app
      - IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION"
      - printf '[{"name":"'${IMAGE_REPO_NAME}'","imageUri":"'${IMAGE_URI}'"}]' >imagedefinitions.json


artifacts:
  files:
    - appspec.yaml
    - taskdef.json
    - imagedefinitions.json
